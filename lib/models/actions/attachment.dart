import 'package:hart_suite/models/general/auditable.dart';

class Attachment {
  String? documentId;
  String filePath;
  Auditable? created;
  Auditable? updated;
  Auditable? deleted;

  Attachment({this.documentId, required this.filePath, this.created, this.updated, this.deleted});

  static Attachment? fromMap(Map<String, dynamic>? map) {
    Attachment? attachment;

    if (map == null || map.isEmpty || map['documentId'] == null) {
      attachment = null;
    } else {
      attachment = Attachment(
          documentId: map.containsKey('documentId') ? map['documentId'] : null,
          filePath: map.containsKey('filePath') ? map['filePath'] : '',
          created: map.containsKey('created') ? Auditable.fromMap(map['created']) : null,
          updated: map.containsKey('updated') ? Auditable.fromMap(map['updated']) : null,
          deleted: map.containsKey('deleted') ? Auditable.fromMap(map['deleted']) : null);
    }

    return attachment;
  }

  Map<String, dynamic> toMap() {
    return {'documentId': documentId, 'filePath': filePath, 'created': created?.toMap(), 'updated': updated?.toMap(), 'deleted': deleted?.toMap()};
  }
}
