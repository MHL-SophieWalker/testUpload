class Contact {
  String? email;
  String? telephone;
  String? mobile;

  Contact({required this.email, required this.telephone, required this.mobile});

  Map<String, dynamic> toMap() {
    return {'email': email, 'telephone': telephone, 'mobile': mobile};
  }

  static Contact? fromMap(Map<String, dynamic>? map) {
    Contact? contact;

    if (map == null || map.isEmpty) {
      contact = Contact(email: '', telephone: '', mobile: '');
    } else {
      contact = Contact(
        email: map.containsKey('email') ? map['email'] : null,
        telephone: map.containsKey('telephone') ? map['telephone'] : null,
        mobile: map.containsKey('mobile') ? map['mobile'] : null,
      );
    }

    return contact;
  }

  static Map<String, Contact?> populate(Map<String, dynamic> map) {
    Map<String, Contact?> innerMap;

    innerMap = <String, Contact?>{};

    for (var key in map.keys) {
      innerMap[key] = Contact.fromMap(map[key]);
    }

    return innerMap;
  }
}
