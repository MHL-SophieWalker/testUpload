class PendingInvitation {
  String? documentId;
  bool? accepted;
  String email;
  String customer;

  PendingInvitation({
    this.documentId,
    this.accepted,
    required this.email,
    required this.customer,
  });

  Map<String, dynamic> toMap() {
    return {
      'documentId': documentId,
      'accepted': accepted,
      'email': email,
      'customer': customer,
    };
  }

  static PendingInvitation? fromMap(Map<String, dynamic>? map) {
    PendingInvitation? pendingInvitations;

    if (map == null || map.isEmpty) {
      pendingInvitations = null;
    } else {
      pendingInvitations = PendingInvitation(
        documentId: map.containsKey('documentId') ? map['documentId'] : null,
        accepted: map.containsKey('accepted') ? map['accepted'] : null,
        email: map.containsKey('email') ? map['email'] : '',
        customer: map.containsKey('customer') ? map['customer'] : '',
      );
    }

    return pendingInvitations;
  }
}
