import 'package:hart_suite/models/general/auditable.dart';

class EquipmentType {
  String? documentId;
  String name;
  Auditable? created;
  Auditable? updated;
  Auditable? deleted;

  EquipmentType({this.documentId, required this.name, this.created, this.updated, this.deleted});

  Map<String, dynamic> toMap() {
    return {'documentId': documentId, 'name': name, 'created': created?.toMap(), 'updated': updated?.toMap(), 'deleted': deleted?.toMap()};
  }

  static EquipmentType? fromMap(Map<String, dynamic>? map) {
    EquipmentType? equipmentType;

    if (map == null || map.isEmpty || map['documentId'] == null) {
      equipmentType = null;
    } else {
      equipmentType = EquipmentType(
        documentId: map.containsKey('documentId') ? map['documentId'] : null,
        name: map.containsKey('name') ? map['name'] : null,
        created: map.containsKey('created') ? Auditable.fromMap(map['created']) : null,
        updated: map.containsKey('updated') ? Auditable.fromMap(map['updated']) : null,
        deleted: map.containsKey('deleted') ? Auditable.fromMap(map['deleted']) : null,
      );
    }

    return equipmentType;
  }

  static Map<String, EquipmentType?> populate(Map<String, dynamic> map) {
    Map<String, EquipmentType?> innerMap;

    innerMap = <String, EquipmentType?>{};

    for (var key in map.keys) {
      innerMap[key] = EquipmentType.fromMap(map[key]);
    }

    return innerMap;
  }
}
