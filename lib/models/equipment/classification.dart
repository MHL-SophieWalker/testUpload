import 'package:hart_suite/models/general/auditable.dart';

class Classification {
  String? documentId;
  String name;
  Auditable? created;
  Auditable? updated;
  Auditable? deleted;

  Classification({this.documentId, required this.name, this.created, this.updated, this.deleted});

  Map<String, dynamic> toMap() {
    return {'documentId': documentId, 'name': name, 'created': created?.toMap(), 'updated': updated?.toMap(), 'deleted': deleted?.toMap()};
  }

  static Classification? fromMap(Map<String, dynamic>? map) {
    Classification? classification;

    if (map == null || map.isEmpty || map['documentId'] == null) {
      classification = null;
    } else {
      classification = Classification(
        documentId: map.containsKey('documentId') ? map['documentId'] : null,
        name: map.containsKey('name') ? map['name'] : null,
        created: map.containsKey('created') ? Auditable.fromMap(map['created']) : null,
        updated: map.containsKey('updated') ? Auditable.fromMap(map['updated']) : null,
        deleted: map.containsKey('deleted') ? Auditable.fromMap(map['deleted']) : null,
      );
    }

    return classification;
  }

  static Map<String, Classification?> populate(Map<String, dynamic> map) {
    Map<String, Classification?> innerMap;

    innerMap = <String, Classification?>{};

    for (var key in map.keys) {
      innerMap[key] = Classification.fromMap(map[key]);
    }

    return innerMap;
  }
}
