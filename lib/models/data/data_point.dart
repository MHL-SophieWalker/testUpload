import 'package:hart_suite/models/data/data_server.dart';
import 'package:hart_suite/models/general/auditable.dart';

class DataPoint {
  String? documentId;
  Map<String, DataServer?> dataServer;
  String name;
  String description;
  String? readOperation;
  String? writeOperation;
  Auditable? created;
  Auditable? updated;
  Auditable? deleted;

  DataPoint(
      {this.documentId,
      required this.dataServer,
      required this.name,
      required this.description,
      required this.readOperation,
      required this.writeOperation,
      this.created,
      this.updated,
      this.deleted});

  Map<String, dynamic> toMap() {
    return {
      'documentId': documentId,
      'dataServer': dataServer.map((key, value) => MapEntry(key, value?.toMap())),
      'name': name,
      'description': description,
      'readOperation': readOperation,
      'writeOperation': writeOperation,
      'created': created?.toMap(),
      'updated': updated?.toMap(),
      'deleted': deleted?.toMap()
    };
  }

  static DataPoint? fromMap(Map<String, dynamic>? map) {
    DataPoint? datapoint;
    Map<String, DataServer?> dataServerMap = {};

    if (map == null || map.isEmpty || map['documentId'] == null) {
      datapoint = null;
    } else {
      if (map.containsKey('dataServer') && map['dataServer'] != null) {
        for (var key in map['dataServer'].keys) {
          dataServerMap[key] = DataServer.fromMap(map['dataServer'][key]);
        }
      }

      datapoint = DataPoint(
        documentId: map.containsKey('documentId') ? map['documentId'] : null,
        dataServer: dataServerMap,
        name: map.containsKey('name') ? map['name'] : '',
        description: map.containsKey('description') ? map['description'] : '',
        readOperation: map.containsKey('readOperation') ? map['readOperation'] : '',
        writeOperation: map.containsKey('writeOperation') ? map['writeOperation'] : '',
        created: map.containsKey('created') ? Auditable.fromMap(map['created']) : null,
        updated: map.containsKey('updated') ? Auditable.fromMap(map['updated']) : null,
        deleted: map.containsKey('deleted') ? Auditable.fromMap(map['deleted']) : null,
      );
    }

    return datapoint;
  }

  static Map<String, DataPoint?> populate(Map<String, dynamic> map) {
    Map<String, DataPoint?> innerMap;

    innerMap = <String, DataPoint?>{};

    for (var key in map.keys) {
      innerMap[key] = DataPoint.fromMap(map[key]);
    }

    return innerMap;
  }
}
