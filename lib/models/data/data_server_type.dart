import 'package:hart_suite/models/general/auditable.dart';

class DataServerType {
  String? documentId;
  String name;
  Auditable? created;
  Auditable? updated;
  Auditable? deleted;

  DataServerType({this.documentId, required this.name, this.created, this.updated, this.deleted});

  Map<String, dynamic> toMap() {
    return {'documentId': documentId, 'name': name, 'created': created?.toMap(), 'updated': updated?.toMap(), 'deleted': deleted?.toMap()};
  }

  static DataServerType? fromMap(Map<String, dynamic>? map) {
    DataServerType? dataServerType;

    if (map == null || map.isEmpty || map['documentId'] == null) {
      dataServerType = null;
    } else {
      dataServerType = DataServerType(
        documentId: map.containsKey('documentId') ? map['documentId'] : null,
        name: map.containsKey('name') ? map['name'] : '',
        created: map.containsKey('created') ? Auditable.fromMap(map['created']) : null,
        updated: map.containsKey('updated') ? Auditable.fromMap(map['updated']) : null,
        deleted: map.containsKey('deleted') ? Auditable.fromMap(map['deleted']) : null,
      );
    }

    return dataServerType;
  }

  static Map<String, DataServerType?> populate(Map<String, dynamic> map) {
    Map<String, DataServerType?> innerMap;

    innerMap = <String, DataServerType?>{};

    for (var key in map.keys) {
      innerMap[key] = DataServerType.fromMap(map[key]);
    }

    return innerMap;
  }
}
