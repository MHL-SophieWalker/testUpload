import 'package:flutter/material.dart';
import 'package:hart_suite/widgets/cards/clickable_card_item.dart';

class SingleSelectList extends StatelessWidget {
  final List<ClickableCardItem> items;
  final AxisDirection direction;
  final String title;

  const SingleSelectList({
    super.key,
    required this.items,
    required this.direction,
    required this.title,
  });

  @override
  Widget build(BuildContext context) {
    Widget widg;

    if (direction == AxisDirection.down) {
      widg = Column(
        children: items,
      );
    } else {
      widg = Row(
        children: items,
      );
    }

    return Scaffold(
      appBar: AppBar(
        title: Text(title),
      ),
      body: SingleChildScrollView(
        child: widg,
      ),
    );
  }
}
