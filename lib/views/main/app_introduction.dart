import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:hart_suite/models/profile/contact.dart';
import 'package:hart_suite/models/profile/person.dart';
import 'package:hart_suite/repos/profile/person_repo.dart';
import 'package:introduction_screen/introduction_screen.dart';

class AppIntroduction extends StatelessWidget {
  const AppIntroduction({super.key});

  @override
  build(BuildContext context) {
    late Person person;
    late PersonRepo personRepo;
    User? fbu = FirebaseAuth.instance.currentUser;

    if (fbu != null) {
      String firstName, lastName, initials;

      if (fbu.displayName != null && fbu.displayName!.isNotEmpty) {
        int firstSpace, lastSpace;
        firstSpace = fbu.displayName!.indexOf(' ');
        lastSpace = fbu.displayName!.lastIndexOf(' ');

        firstName = fbu.displayName!.substring(0, firstSpace);
        lastName = fbu.displayName!.substring(lastSpace + 1);

        if (firstSpace != lastSpace) {
          initials = fbu.displayName!.substring(firstSpace + 1, lastSpace);
        } else {
          initials = '';
        }
      } else {
        firstName = '';
        lastName = '';
        initials = '';
      }

      person = Person(
        documentId: fbu.uid,
        image: '',
        firstName: firstName,
        lastName: lastName,
        initials: initials,
        contact: Contact(email: fbu.email, telephone: fbu.phoneNumber, mobile: null),
        disciplines: {},
      );

      person.image = person.getImagePathString();

      personRepo = PersonRepo(personSnapshot: person.getPersonSnapshot());

      personRepo.set(person: person);
    }

    return SafeArea(
      child: IntroductionScreen(
        pages: [
          PageViewModel(
            title: 'Welcome to HartSuite®',
            bodyWidget: Column(
              children: [
                const Text('Thank you for installing HartSuite®. The following pages will guide you through the initial user setup.'),
                const SizedBox(
                  height: 16,
                ),
                Image.asset(
                  'assets/images/icon.png',
                  height: MediaQuery.of(context).size.height * 0.3,
                  scale: 1,
                ),
              ],
            ),
          ),
          PageViewModel(
            title: 'Welcome to HartSuite®',
            bodyWidget: Column(
              children: [
                SizedBox(
                  width: kIsWeb ? MediaQuery.of(context).size.width * 0.75 : MediaQuery.of(context).size.width * 0.9,
                  child: const Text('Your user profile has been filled in using details from the login provider you selected. This only includes your email and name. '
                      'Please review the details and update as necessary by clicking your name in the bottom left of the home page, and the selecting \'My Profile\''),
                ),
                const SizedBox(
                  height: 16,
                ),
                Image.asset('assets/images/profile_settings.png', height: MediaQuery.of(context).size.height * 0.3, scale: 1),
              ],
            ),
          ),
        ],
        onDone: () => Navigator.of(context).pushReplacementNamed('/home'),
        next: const Icon(Icons.arrow_forward),
        done: const Text('Done'),
        dotsDecorator: DotsDecorator(
          size: const Size(10.0, 10.0),
          color: Colors.blue,
          activeSize: const Size(22.0, 10.0),
          activeShape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(25.0),
          ),
        ),
      ),
    );
  }
}
