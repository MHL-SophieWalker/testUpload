import 'package:flutter/material.dart';
import 'package:hart_suite/views/main/home.dart';

class ForbiddenPage extends StatelessWidget {
  static const route = '/forbidden';

  const ForbiddenPage({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: !Navigator.canPop(context) ? IconButton(icon: const Icon(Icons.home), onPressed: () => Navigator.pushNamed(context, HomePage.route)) : null,
        title: const Text('Forbidden'),
      ),
      body: Center(
        child: Column(
          children: [
            Padding(
              padding: const EdgeInsets.all(12),
              child: Image.asset(
                'assets/images/padlock.jpeg',
                height: MediaQuery.of(context).size.height * .5,
                scale: 1,
              ),
            ),
            const Text('You do not have access to this page. If you feel this is in error please contact your system administrator.'),
            TextButton(
              onPressed: () => Navigator.pushNamed(context, HomePage.route),
              child: const Text('Return to home.'),
            ),
          ],
        ),
      ),
    );
  }
}
