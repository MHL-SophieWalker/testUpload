import 'package:hart_suite/helpers/class/enums_help.dart';
import 'package:hart_suite/models/profile/person.dart';
import 'package:hart_suite/models/actions/action.dart' as act;

class ActionPermissionHelp {
  static const String name = 'name';
  static const String description = 'description';
  static const String area = 'area';
  static const String category = 'category';
  static const String subcategory = 'subcategory';
  static const String dueDate = 'due';
  static const String changeAssignees = 'assignees';
  static const String changeVerifiers = 'verifiers';
  static const String attachments = 'attachments';
  static const String signAsVerifier = 'verifierSign';
  static const String signAsAssignee = 'assigneeSign';
  static const String title = 'title';
  static const String save = 'save';
  static const String theme = 'theme';
  static const String linkedActions = 'linkedActions';

  final act.Action action;
  final Person person;
  late List<String> editableFields;
  final List<String> adminIds;

  ActionPermissionHelp({required this.action, required this.person, required this.adminIds});

  bool canEditField(String field, {String? actionStatus}) {
    if (actionStatus != null && actionStatus == EnumsHelp.statusDone) {
      return false;
    }
    return getEditableFields().contains(field);
  }

  bool canComment() {
    return personIsAdmin() || personIsCreator() || personIsVerifier() || personIsAssignee();
  }

  List<String> getEditableFields() {
    List<String> assigneeFields, verifierFields, adminFields, creatorFields;

    editableFields = List.empty(growable: true);
    assigneeFields = List.empty(growable: true);
    verifierFields = List.empty(growable: true);
    adminFields = List.empty(growable: true);
    creatorFields = List.empty(growable: true);

    adminFields = [name, description, area, category, subcategory, dueDate, changeAssignees, changeVerifiers, attachments, title, save, theme, linkedActions];
    creatorFields = [name, description, area, category, subcategory, dueDate, changeAssignees, changeVerifiers, attachments, title, save, theme, linkedActions];
    verifierFields = [
      name,
      description,
      area,
      category,
      subcategory,
      dueDate,
      changeAssignees,
      changeVerifiers,
      attachments,
      signAsVerifier,
      title,
      save,
      theme,
      linkedActions
    ];
    assigneeFields = [signAsAssignee, attachments, save];

//a user should have the most restrctive permissions available after an action is created, except if the person is a verifier
//first check is for assignee as assignee cannot also be a verifier
    if (personIsAssignee()) {
      editableFields = assigneeFields;
    } else if (personIsVerifier()) {
      editableFields = verifierFields;
    } else if (personIsCreator()) {
      editableFields = creatorFields;
    } else if (personIsAdmin()) {
      editableFields = adminFields;
    }

    return editableFields;
  }

  bool personIsCreator() {
    return person.documentId! == action.created?.person?.uid;
  }

  bool personIsVerifier() {
    bool isVerifier;

    isVerifier = false;

    if (action.verifiers![person.documentId!] != null) {
      isVerifier = true;
    }

    return isVerifier;
  }

  bool personIsAdmin() {
    bool isAdmin;

    isAdmin = false;

    if (adminIds.contains(person.documentId!)) {
      isAdmin = true;
    }

    return isAdmin;
  }

  bool personIsAssignee() {
    bool isAssignee;

    isAssignee = false;

    if (action.assignees![person.documentId!] != null) {
      isAssignee = true;
    }

    return isAssignee;
  }

  List<String> addToList(List<String> list, List<String> list2) {
    for (String s in list2) {
      if (!list.contains(s)) {
        list.add(s);
      }
    }

    return list;
  }
}
