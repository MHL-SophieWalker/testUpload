import 'package:flutter/foundation.dart';

class LicenseRegistryHelper {
  static void addAllLicenses() {
    LicenseRegistry.addLicense(() async* {
      yield LicenseEntryWithLineBreaks(
        <String>['HartSuite'],
        toS,
      );

      yield LicenseEntryWithLineBreaks(
        <String>['HartSuite'],
        eula,
      );

      yield LicenseEntryWithLineBreaks(
        <String>['HartSuite'],
        privacyPolicy,
      );

      yield LicenseEntryWithLineBreaks(
        <String>['HartSuite'],
        acceptableUse,
      );
    });
  }

  static String toS = 'Terms of Service Agreement (ToS) of HartSuite\r\n'
      'These HartSuite Terms of Service (together, the "Agreement") are entered into by M HART LTD (the “Company”) and the entity or person agreeing to these terms ("Customer") and govern Customer\'s access to and use of the Services.\r\n'
      'This Agreement is effective when Customer accepts it (the "Effective Date"). If you are accepting on behalf of Customer, you represent and warrant that (i) you have full legal authority to bind Customer to this Agreement; (ii) you have read and understand this Agreement; and (iii) you agree, on behalf of Customer, to this Agreement.\r\n'
      '1. Provision of the Services.\r\n'
      '1.1 Services Use. During the Term, the Company will provide the Services in accordance with the Agreement, including the SLAs, and Customer may use the Services, and integrate the Services into any Customer Application that has material value independent of the Services, in accordance with the Agreement.\r\n'
      '1.2 Admin Console. Customer will have access to the Admin Console, through which Customer may manage its use of the Services.\r\n'
      '1.3 Accounts. Customer must have an Account to use the Services and is responsible for the information it provides to create the Account, the security of its passwords for the Account, and for any use of its Account. The Company has no obligation to provide multiple accounts to Customer.\r\n'
      '1.4 Modifications.\r\n'
      '(a) To the Services. The Company may make commercially reasonable updates to the Services from time to time. The Company will inform Customer if the Company makes a material change to the Services that has a material impact on Customer\'s use of the Services provided that Customer has subscribed with the Company to be informed about such change.\r\n'
      '(b) To the Agreement. The Company may make changes to this Agreement (including the URL Terms) and pricing from time to time. Unless otherwise noted by the Company, material changes to the Agreement will become effective 30 days after they are posted, except to the extent the changes apply to new functionality, or are required by applicable law, in which case they will be effective immediately. The Company will provide at least 90 days\' advance notice for materially adverse changes to any SLAs by (i) sending an email to the Notification Email Address; (ii) posting a notice in the Admin Console; or (iii) posting a notice to the applicable SLA webpage. If Customer does not agree to the revised Agreement, Customer may stop using the Services. Customer may also terminate this Agreement for convenience under Section 8.4 (Termination for Convenience). Customer\'s continued use of the Services after such material change will constitute Customer\'s consent to such changes. The Company will post any modification to this Agreement to https://www.hartsuite.com/terms/tos.\r\n'
      '(c) Discontinuation of Services. The Company will notify Customer at least 3 months before discontinuing any Service (or associated material functionality) unless the Company replaces such discontinued Service or functionality with a materially similar Service or functionality. Nothing in this Section 1.4(d) (Discontinuation of Services) limits the Company\'s ability to make changes required to comply with applicable law, address a material security risk, or avoid a substantial economic or material technical burden. This Section 1.4(d) (Discontinuation of Services) does not apply to pre-general availability Services, offerings, or functionality.\r\n'
      '1.5 Software. If the Company makes Software available to Customer, including third-party software, Customer\'s use of any Software is subject to the applicable provisions in the Service Specific Terms.\r\n'
      '2. Payment Terms.\r\n'
      '2.1 Online Billing. At the end of the applicable Fee Accrual Period or as otherwise stated by the Company in the Admin Console, the Company will issue an electronic bill to Customer for all charges based on Customer\'s use of the Services during the applicable Fee Accrual Period (including, if applicable, the relevant Fees for TSS). If the Company reasonably determines based on evidence available to the Company that Customer is at risk of non-payment or that Customer\'s Account is potentially fraudulent, then the Company may invoice Customer more frequently. Customer will pay all Fees in the currency stated in the invoice. If Customer elects to pay by credit card, debit card, or other non-invoiced form of payment, the Company will charge (and Customer will pay) all Fees immediately at the end of the Fee Accrual Period. If Customer elects to pay by invoice (and the Company agrees), all Fees are due as stated in the invoice. Unless required by law, Customer\'s obligation to pay all Fees is non-cancellable. The Company\'s measurement of Customer\'s use of the Services is final. The Company has no obligation to provide multiple bills. Payments made via wire transfer must include the bank information provided by the Company.\r\n'
      '2.2 Taxes.\r\n'
      '(a) Customer is responsible for any Taxes, and will pay the Company for the Services without any reduction for Taxes. If the Company is obligated to collect or pay any Taxes, the Taxes will be invoiced to Customer and Customer will pay such Taxes to the Company, unless Customer provides the Company with a timely and valid tax exemption certificate in respect of those Taxes.\r\n'
      '(b) Customer will provide the Company with any applicable tax identification information that the Company may require under applicable law to ensure its compliance with applicable tax regulations and authorities in applicable jurisdictions. Customer will be liable to pay (or reimburse the Company for) any taxes, interest, penalties, or fines arising out of any mis-declaration by Customer.\r\n'
      '2.3 Payment Disputes & Refunds. Any payment disputes must be submitted in good faith before the payment due date. If the Company, having reviewed the dispute in good faith, determines that certain billing inaccuracies are attributable to the Company, the Company will not issue a corrected invoice, but will instead issue a credit memo specifying the incorrect amount in the affected invoice. If a disputed invoice has not yet been paid, the Company will apply the credit memo amount to a disputed invoice and Customer will be responsible for paying the resulting net balance due on that invoice. Refunds given by the Company for billing inaccuracies under this Section will only be in the form of credit for the Services. Nothing in this Agreement obligates the Company to extend credit to any party.\r\n'
      '2.4 Delinquent Payments; Suspension. Late payments (which, for clarity, do not include amounts subject to a good faith payment dispute submitted before the payment due date), may bear interest at the rate of 1.5% per month (or the highest rate permitted by law, if less) from the payment due date until paid in full. Customer will be responsible for all reasonable expenses (including attorneys\' fees) incurred by the Company in collecting such delinquent amounts. Further, in the event of any late payment for the Services, the Company may Suspend the Services.\r\n'
      '2.5 No Purchase Order Number Required. Customer is obligated to pay all applicable Fees without any requirement for the Company to provide a purchase order number on the Company\'s invoice (or otherwise).\r\n'
      '3. Customer Obligations.\r\n'
      '3.1 Compliance. Customer will (a) ensure that Customer and its End Users\' use of the Services complies with the Agreement, (b) use commercially reasonable efforts to prevent and terminate any unauthorized use of, or access to, the Services, and (c) promptly notify the Company of any unauthorized use of, or access to, the Services, Account, or Customer\'s password of which Customer becomes aware. The Company reserves the right to investigate any potential violation of the AUP by Customer, which may include reviewing Customer Applications, Customer Data, or Projects.\r\n'
      '3.2 Privacy. Customer is responsible for any consents and notices required to permit (a) Customer\'s use and receipt of the Services and (b) the Company\'s accessing, storing, and processing of data provided by Customer (including Customer Data, if applicable) under the Agreement.\r\n'
      '3.3 Restrictions. Customer will not, and will not allow End Users to, (a) copy, modify, or create a derivative work of the Services; (b) reverse engineer, decompile, translate, disassemble, or otherwise attempt to extract any or all of the source code of, the Services (except to the extent such restriction is expressly prohibited by applicable law); (c) sell, resell, sublicense, transfer, or distribute any or all of the Services; or (d) access or use the Services (i) for High Risk Activities; (ii) in violation of the AUP; (iii) in a manner intended to avoid incurring Fees (including creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively)) or to circumvent Service-specific usage limits or quotas; (iv) to engage in cryptocurrency mining without the Company\'s prior written approval; (v) to operate or enable any telecommunications service or in connection with any Customer Application that allows End Users to place calls or to receive calls from any public switched telephone network, unless otherwise described in the Service Specific Terms; (vi) for materials or activities that are subject to the International Traffic in Arms Regulations (ITAR) maintained by the United States Department of State; (vii) in a manner that breaches, or causes the breach of, Export Control Laws; or (viii) to transmit, store, or process health information subject to United States HIPAA regulations except as permitted by an executed HIPAA BAA.\r\n'
      '3.4 Documentation. The Company may provide Documentation for Customer\'s use of the Services.\r\n'
      '3.5 Copyright. The Company responds to notices of alleged copyright infringement and terminates the Accounts of repeat infringers in appropriate circumstances as required to maintain safe harbour for online service providers under the Copyright, Designs and Patents Act 1988.\r\n'
      '3.6 Third-Party Content Enforcement. If Customer\'s primary use of the Services is to host third-party content or facilitate the sale of goods or services between third parties on its platform, Customer will take the following steps to enforce compliance with the AUP: (a) publish policies defining what content is prohibited on its platform (e.g., illegal content); (b) maintain a publicly accessible method (e.g., webform or email alias) to receive notices of violation of that policy (in addition to a monitored communications channel for the Company); and (c) promptly review and address any such notices, and remove content where appropriate.\r\n'
      '4. Suspension.\r\n'
      '4.1 AUP Violations. If the Company becomes aware that Customer\'s or any End User\'s use of the Services violates the AUP, the Company will notify Customer and request that Customer correct the violation. If Customer fails to correct the violation within 24 hours of the Company\'s request, then the Company may Suspend all or part of Customer\'s use of the Services until the violation is corrected.\r\n'
      '4.2 Other Suspension. Notwithstanding Section 4.1 (AUP Violations), the Company may immediately Suspend all or part of Customer\'s use of the Services if (a) the Company reasonably believes Suspension is needed to protect the Services, the Company\'s infrastructure supporting the Services, or any other customer of the Services (or their end users); (b) there is suspected unauthorized third-party access to the Services; (c) the Company reasonably believes that immediate Suspension is required to comply with any applicable law; or (d) Customer is in breach of Section 3.3 (Restrictions) or the Service Specific Terms. The Company will lift any such Suspension when the circumstances giving rise to the Suspension have been resolved. At Customer\'s request, the Company will, unless prohibited by applicable law, notify Customer of the basis for the Suspension as soon as is reasonably possible.\r\n'
      '5. Intellectual Property Rights; Protection of Customer Data; Feedback.\r\n'
      '5.1 Intellectual Property Rights. Except as expressly stated in this Agreement, this Agreement does not grant either party any rights, implied or otherwise, to the other\'s content or any of the other\'s intellectual property. As between the parties, Customer retains all Intellectual Property Rights in Customer Data and Customer Applications, and the Company retains all Intellectual Property Rights in the Services and Software.\r\n'
      '5.2 Protection of Customer Data. The Company will only access, use, and otherwise process Customer Data in accordance with this agreement and will not access, use, or process Customer Data for any other purpose. The Company has implemented and will maintain technical, organisational, and physical measures to protect Customer Data, as further described in the Privacy Policy.\r\n'
      '5.3 Customer Feedback. At its option, Customer may provide feedback or suggestions about the Services to the Company ("Feedback"). If Customer provides Feedback, then the Company and its Affiliates may use that Feedback without restriction and without obligation to Customer.\r\n'
      '6. Technical Support Services.\r\n'
      '6.1 By Customer. Customer is responsible for technical support of its Customer Applications and Projects.\r\n'
      '6.2 By the Company. Subject to payment of applicable support Fees, the Company will provide support to Customer during the Term in accordance with the support agreement.\r\n'
      '7. Confidential Information.\r\n'
      '7.1 Obligations. The recipient will only use the disclosing party\'s Confidential Information to exercise the recipient\'s rights and fulfil its obligations under the Agreement and will use reasonable care to protect against the disclosure of the disclosing party\'s Confidential Information. The recipient may disclose Confidential Information only to its Affiliates, employees, agents, or professional advisors ("Delegates") who need to know it and who have agreed in writing (or in the case of professional advisors are otherwise bound) to keep it confidential. The recipient will ensure that its Delegates use the received Confidential Information only to exercise rights and fulfil obligations under this Agreement.\r\n'
      '7.2 Required Disclosure. Notwithstanding any provision to the contrary in this Agreement, the recipient or its Affiliate may also disclose Confidential Information to the extent required by applicable Legal Process; provided that the recipient or its Affiliate uses commercially reasonable efforts to (a) promptly notify the other party before any such disclosure of its Confidential Information, and (b) comply with the other party\'s reasonable requests regarding its efforts to oppose the disclosure. Notwithstanding the foregoing, subsections (a) and (b) above will not apply if the recipient determines that complying with (a) and (b) could (i) result in a violation of Legal Process; (ii) obstruct a governmental investigation; or (iii) lead to death or serious physical harm to an individual.\r\n'
      '8. Term and Termination.\r\n'
      '8.1 Agreement Term. The term of this Agreement (the "Term") will begin on the Effective Date and continue until the Agreement is terminated as stated in this Section 8 (Term and Termination).\r\n'
      '8.2 Termination for Breach. To the extent permitted by applicable law, either party may terminate this Agreement immediately on written notice if (a) the other party is in material breach of the Agreement and fails to cure that breach within 30 days after receipt of written notice of the breach or (b) the other party ceases its business operations or becomes subject to insolvency proceedings and the proceedings are not dismissed within 90 days.\r\n'
      '8.3 Termination for Inactivity. The Company reserves the right to terminate the provision of the Services to a Project upon 30 days\' advance notice if, for a period of 60 days (a) Customer has not accessed the Admin Console or the Project has had no network activity and (b) such Project has not incurred any Fees for such Services.\r\n'
      '8.4 Termination for Convenience. Customer may stop using the Services at any time. Customer may terminate this Agreement for its convenience at any time on prior written notice and, upon termination, must cease use of the applicable Services. The Company may terminate this Agreement for its convenience at any time with 30 days\' prior written notice to Customer.\r\n'
      '8.5 Termination Due to Applicable Law; Violation of Laws. The Company may terminate this Agreement immediately on written notice if the Company reasonably believes that (a) continued provision of any Service used by Customer would violate applicable law(s) or (b) Customer has violated or caused the Company to violate any Anti-Bribery Laws or Export Control Laws.\r\n'
      '8.6 Effect of Termination. If the Agreement is terminated, then (a) all rights and access to the Services will terminate (including access to Customer Data, if applicable), unless otherwise described in this Agreement, and (b) all Fees owed by Customer to the Company are immediately due upon Customer\'s receipt of the final electronic bill or as stated in the final invoice.\r\n'
      '9. Publicity.\r\n'
      'Customer may state publicly that it is a customer of the Company and display the Company\'s Brand Features in accordance with the Trademark Guidelines. The Company may use Customer\'s name and Brand Features in online or offline promotional materials of the Services. Each party may use the other party\'s Brand Features only as permitted in the Agreement. Any use of a party\'s Brand Features will inure to the benefit of the party holding Intellectual Property Rights to those Brand Features.\r\n'
      '10. Representations and Warranties.\r\n'
      'Each party represents and warrants that (a) it has full power and authority to enter into the Agreement, and (b) it will comply with all laws applicable to its provision, receipt, or use of the Services, as applicable.\r\n'
      '11. Disclaimer.\r\n'
      'Except as expressly provided for in the Agreement, the Company does not make and expressly disclaims to the fullest extent permitted by applicable law (a) any warranties of any kind, whether express, implied, statutory, or otherwise, including warranties of merchantability, fitness for a particular use, title, noninfringement, or error-free or uninterrupted use of the Services or Software and (b) any representations about content or information accessible through the Services.\r\n'
      '12. Limitation of Liability.\r\n'
      '12.1 Limitation on Indirect Liability.\r\n'
      'To the extent permitted by applicable law and subject to Section 12.2 (Unlimited Liabilities), neither party will have any Liability arising out of or relating to the Agreement for any (a) indirect, consequential, special, incidental, or punitive damages or (b) lost revenues, profits, savings, or goodwill.\r\n'
      'Limitation on Amount of Liability. Each party\'s total aggregate Liability for damages arising out of or relating to the Agreement is limited to the Fees Customer paid during the 12 month period before the event giving rise to Liability, except the Company\'s total aggregate Liability for damages arising out of or related to Services or Software provided free of charge is limited to £5,000.\r\n'
      '12.2 Unlimited Liabilities.\r\n'
      'Nothing in the Agreement excludes or limits either party\'s Liability for:\r\n'
      '(a) its fraud or fraudulent misrepresentation;\r\n'
      '(b) its obligations under Section 13 (Indemnification);\r\n'
      '(c) its infringement of the other party\'s Intellectual Property Rights;\r\n'
      '(d) its payment obligations under the Agreement; or\r\n'
      '(e) matters for which liability cannot be excluded or limited under applicable law.\r\n'
      '13. Indemnification.\r\n'
      '13.1 Indemnification Obligations. The Company will defend Customer and its Affiliates using the Services under Customer\'s Account and indemnify them against Indemnified Liabilities in any Third-Party Legal Proceeding to the extent arising from an allegation that any Service or any Brand Feature, in each case used in accordance with the Agreement, infringes the third party\'s Intellectual Property Rights.\r\n'
      '13.2 Customer Indemnification Obligations. Customer will defend the Company and its Affiliates providing the Services and indemnify them against Indemnified Liabilities in any Third-Party Legal Proceeding to the extent arising from (a) any Customer Application, Project, Customer Data, or Customer Brand Features; or (b) Customer\'s or an End User\'s use of the Services in breach of the AUP or Section 3.3 (Restrictions).\r\n'
      '13.3 Exclusions. Sections 13.1 (Indemnification Obligations) and 13.2 (Customer Indemnification Obligations) will not apply to the extent the underlying allegation arises from (a) the indemnified party\'s breach of the Agreement, (b) a combination of the indemnifying party\'s technology or Brand Features with materials not provided by the indemnifying party under the Agreement, unless the combination is required by the Agreement, or (c) in the case of the Company or any of its Affiliates as the indemnifying party, any Services provided to Customer free of charge.\r\n'
      '13.4 Conditions. Sections 13.1 (Indemnification Obligations) and 13.2 (Customer Indemnification Obligations) are conditioned on the following:\r\n'
      '(a) Any indemnified party must promptly notify the indemnifying party in writing of any allegation(s) that preceded the Third-Party Legal Proceeding and cooperate reasonably with the indemnifying party to resolve the allegation(s) and Third-Party Legal Proceeding. If breach of this Section 13.4(a) prejudices the defence of the Third-Party Legal Proceeding, the indemnifying party\'s obligations under Section 13.1 (Indemnification Obligations) or 13.2 (Customer Indemnification Obligations) (as applicable) will be reduced in proportion to the prejudice.\r\n'
      '(b) Any indemnified party must tender sole control of the indemnified portion of the Third-Party Legal Proceeding to the indemnifying party, subject to the following: (i) the indemnified party may appoint its own non-controlling counsel, at its own expense; and (ii) any settlement requiring the indemnified party to admit liability, pay money, or take (or refrain from taking) any action, will require the indemnified party\'s prior written consent, not to be unreasonably withheld, conditioned, or delayed.\r\n'
      '13.5 Remedies.\r\n'
      '(a) If the Company reasonably believes the Services might infringe a third party\'s Intellectual Property Rights, then the Company may, at its sole option and expense (i) procure the right for Customer to continue using the Services; (ii) modify the Services to make them non-infringing without materially reducing their functionality; or (iii) replace the Services with a non-infringing, functionally equivalent alternative.\r\n'
      '(b) If the Company does not believe the remedies in Section 13.5(a) are commercially reasonable, then the Company may Suspend or terminate Customer\'s use of the impacted Services.\r\n'
      '13.6 Sole Rights and Obligations. Without affecting either party\'s termination rights and to the extent permitted by applicable law, this Section 13 (Indemnification) states the parties\' sole and exclusive remedy under this Agreement for any third-party allegations of Intellectual Property Rights infringement covered by this Section 13 (Indemnification).\r\n'
      '14. Miscellaneous.\r\n'
      '14.1 Notices. Under the Agreement, notices to Customer must be sent to the Notification Email Address and notices to the Company must be sent to hello@hart-ltd.com. Notice will be treated as received when the email is sent. Customer is responsible for keeping its Notification Email Address current throughout the Term.\r\n'
      '14.2 Emails. The parties may use emails to satisfy written approval and consent requirements under the Agreement.\r\n'
      '14.3 Assignment. Neither party may assign any part of this Agreement without the written consent of the other, except to an Affiliate where (a) the assignee has agreed in writing to be bound by the terms of this Agreement, and (b) the assigning party has notified the other party of the assignment. Any other attempt to assign is void. If Customer assigns this Agreement to an Affiliate in another jurisdiction such that there is a change in the Company\'s contracting entity this Agreement is automatically assigned to the new the Company contracting entity.\r\n'
      '14.4 Change of Control. If a party experiences a change of Control other than as part of an internal restructuring or reorganisation (for example, through a stock purchase or sale, merger, or other form of corporate transaction), that party will give written notice to the other party within 30 days after the change of Control.\r\n'
      '14.5 Force Majeure. Neither party will be liable for failure or delay in performance to the extent caused by circumstances beyond its reasonable control, including acts of God, natural disasters, terrorism, riots, or war.\r\n'
      '14.6 Subcontracting. The Company may subcontract obligations under the Agreement but will remain liable to Customer for any subcontracted obligations.\r\n'
      '14.7 No Agency. This Agreement does not create any agency, partnership, or joint venture between the parties.\r\n'
      '14.8 No Waiver. Neither party will be treated as having waived any rights by not exercising (or delaying the exercise of) any rights under this Agreement.\r\n'
      '14.9 Severability. If any part of this Agreement is invalid, illegal, or unenforceable, the rest of the Agreement will remain in effect.\r\n'
      '14.10 No Third-Party Beneficiaries. This Agreement does not confer any benefits on any third party unless it expressly states that it does.\r\n'
      '14.11 Equitable Relief. Nothing in this Agreement will limit either party\'s ability to seek equitable relief.\r\n'
      '14.12 Governing Law. This agreement will abide by all governing laws in the jurisdictions as to where the Service resides.\r\n'
      '14.13 Amendments. any amendment must be in writing, signed by both parties, and expressly state that it is amending this Agreement.\r\n'
      '14.14 Survival. The following Sections will survive expiration or termination of this Agreement: Section 2 (Payment Terms), Section 5 (Intellectual Property Rights; Protection of Customer Data; Feedback), Section 7 (Confidential Information), Section 8.6 (Effect of Termination), Section 11 (Disclaimer), Section 12 (Limitation of Liability), Section 13 (Indemnification), and Section 14 (Miscellaneous).\r\n'
      '14.15 Entire Agreement. This Agreement sets out all terms agreed between the parties and supersedes all other agreements between the parties relating to its subject matter. In entering into this Agreement, neither party has relied on, and neither party will have any right or remedy based on, any statement, representation, or warranty (whether made negligently or innocently), except those expressly stated in this Agreement. The URL Terms are incorporated by reference into the Agreement. After the Effective Date, the Company may provide an updated URL in place of any URL in this Agreement.\r\n'
      '14.16 Conflicting Terms. If there is a conflict between the documents that make up this Agreement, the documents will control in the following order (of decreasing precedence): the remainder of the Agreement (excluding the URL Terms), and the URL Terms.\r\n'
      '14.17 Headers. Headings and captions used in the Agreement are for reference purposes only and will not have any effect on the interpretation of the Agreement.\r\n'
      '14.18 Conflicting Languages. If this Agreement is translated into any language other than English, and there is a discrepancy between the English text and the translated text, the English text will govern unless expressly stated otherwise in the translation.\r\n'
      '14.19 Definitions.\r\n'
      '"Account" means Customer\'s HartSuite account.\r\n'
      '"Admin Console" means the online console(s) or dashboard provided by the Company to Customer for administering the Services.\r\n'
      '"Affiliate" means any entity that directly or indirectly Controls, is Controlled by, or is under common Control with a party.\r\n'
      '"Anti-Bribery Laws" means all applicable commercial and public anti-bribery laws, including the U.S. Foreign Corrupt Practices Act of 1977 and the UK Bribery Act 2010, that prohibit corrupt offers of anything of value, either directly or indirectly, to anyone, including government officials, to obtain or keep business or to secure any other improper commercial advantage. Government officials include: any government employees, candidates for public office, members of royal families, and employees of government-owned or government-controlled companies, public international organizations, and political parties.\r\n'
      '"AUP" means the then-current acceptable use policy for the Services stated at https://www.hartsuite.com/terms/aup.\r\n'
      '"BAA" or "Business Associate Agreement" is an amendment to the Agreement covering the handling of Protected Health Information (as defined in HIPAA).\r\n'
      '"Brand Features" means the trade names, trademarks, service marks, logos, domain names, and other distinctive brand features of each party, respectively, as secured by such party from time to time.\r\n'
      '"Confidential Information" means information that one party (or an Affiliate) discloses to the other party under this Agreement, and which is marked as confidential or would normally under the circumstances be considered confidential information. It does not include information that is independently developed by the recipient, is rightfully given to the recipient by a third party without confidentiality obligations, or becomes public through no fault of the recipient. Subject to the preceding sentence, Customer Data is considered Customer\'s Confidential Information.\r\n'
      '"Control" means control of greater than 50 percent of the voting rights or equity interests of a party.\r\n'
      '"Customer Application" means a software program that Customer creates or hosts using the Services.\r\n'
      '"Customer Data" means data provided to the Company by Customer or End Users through the Services under the Account, and data that Customer or End Users derive from that data through their use of the Services.\r\n'
      '"Documentation" means the HartSuite documentation (as may be updated from time to time) in the form generally made available by the Company to its customers.\r\n'
      '"End Users" means the individuals who are permitted by Customer to use the Services. For clarity, End Users may include employees of Customer Affiliates and other authorized third parties.\r\n'
      '"Export Control Laws" means all applicable export and re-export control laws and regulations, including (a) the Export Administration Regulations ("EAR") maintained by the U.S. Department of Commerce, (b) trade and economic sanctions maintained by the U.S. Treasury Department\'s Office of Foreign Assets Control, and (c) the International Traffic in Arms Regulations ("ITAR") maintained by the U.S. Department of State.\r\n'
      '"Fee Accrual Period" means a calendar month or another period specified by the Company in the Admin Console.\r\n'
      '"Fees" means the applicable fees for each Service, Software, or TSS plus any applicable Taxes.\r\n'
      '"High Risk Activities" means activities where the use or failure of the Services would reasonably be expected to lead to death, personal injury, or environmental or property damage (such as the creation or operation of nuclear facilities, air traffic control, life support systems, or weaponry).\r\n'
      '"HIPAA" means the Health Insurance Portability and Accountability Act of 1996 as it may be amended from time to time, and any regulations issued under it.\r\n'
      '"including" means including but not limited to.\r\n'
      '"Indemnified Liabilities" means any (i) settlement amounts approved by the indemnifying party and (ii) damages and costs finally awarded against the indemnified party by a court of competent jurisdiction.\r\n'
      '"Intellectual Property Rights" means current and future worldwide rights under patent, copyright, trade secret, trademark, and moral rights laws, and other similar rights.\r\n'
      '"Legal Process" means an information disclosure request made under law, governmental regulation, court order, subpoena, warrant, or other valid legal authority, legal procedure, or similar process.\r\n'
      '"Liability" means any liability, whether under contract, tort (including negligence), or otherwise, regardless of whether foreseeable or contemplated by the parties.\r\n'
      '"Notification Email Address" means the email address(es) designated by Customer in the Admin Console.\r\n'
      '"Project" means a collection of resources configured by Customer via the Services.\r\n'
      '"SLA" means each of the then-current service level agreements at https://www.hartsuite.com/terms/sla.\r\n'
      '"Software" means any downloadable tools, software development kits, or other such computer software provided by the Company in connection with the Services, and any updates the Company may make to such Software from time to time, excluding any Third-Party Offerings.\r\n'
      '"Suspend" or "Suspension" means disabling or limiting access to or use of the Services or components of the Services.\r\n'
      '"Taxes" means all government-imposed taxes, except for taxes based on the Company\'s net income, net worth, asset value, property value, or employment.\r\n'
      '"Term" has the meaning stated in Section 8.1 (Agreement Term) of this Agreement.\r\n'
      '"Third-Party Offerings" means (a) third-party services, software, products, and other offerings that are not incorporated into the Services or Software, (b) offerings identified in the "Third-Party Terms" section of the Service Specific Terms, and (c) third-party operating systems.\r\n'
      '"Third-Party Legal Proceeding" means any formal legal proceeding filed by an unaffiliated third party before a court or government tribunal (including any appellate proceeding).\r\n'
      '"TSS" means the then-current technical support service provided by the Company to Customer under the TSS Guidelines.\r\n'
      '"URL Terms" means, collectively, the AUP, Service Specific Terms, SLA, and TSS Guidelines.\r\n'
      '15. Regional Terms.\r\n'
      'Customer agrees to the following modifications to the Agreement if Customer\'s billing address is in the applicable region as described below:\r\n'
      'All regions, excluding United Kingdom\r\n'
      'Section 2.2 is replaced as follows:\r\n'
      '2.2 Taxes. The Company will itemise any invoiced Taxes. If Taxes must be withheld from any payment to the Company, then Customer will increase the payment to the Company so that the net amount received by the Company is equal to the amount invoiced, without reduction for Taxes.\r\n'
      'The definition of "Taxes" under Section 14.19 (Definitions) is replaced as follows:\r\n'
      '14.19 Definitions.\r\n'
      '"Taxes" means all government-imposed taxes, as per the applicable law associated with the rendering and performance of the Services, including but not limited to any duties, customs duties, and any direct or indirect taxes, including any related penalties or interest, except for taxes based on the Company\'s profit.\'\r\n';

  static String eula = 'End-User License Agreement (EULA) of HartSuite\r\n'
      'This End-User License Agreement ("EULA") is a legal agreement between you and M HART LTD.\r\n'
      'This EULA agreement governs your acquisition and use of our HartSuite software ("Software") directly from M HART LTD or indirectly through a M HART LTD authorized reseller or distributor (a "Reseller").\r\n'
      'Please read this EULA agreement carefully before completing the installation process and using the HartSuite software. It provides a license to use the HartSuite software and contains warranty information and liability disclaimers.\r\n'
      'If you register for a free trial of the HartSuite software, this EULA agreement will also govern that trial. By clicking "accept" or installing and/or using the HartSuite software, you are confirming your acceptance of the Software and agreeing to become bound by the terms of this EULA agreement.\r\n'
      'If you are entering into this EULA agreement on behalf of a company or other legal entity, you represent that you have the authority to bind such entity and its affiliates to these terms and conditions. If you do not have such authority or if you do not agree with the terms and conditions of this EULA agreement, do not install or use the Software, and you must not accept this EULA agreement.\r\n'
      'This EULA agreement shall apply only to the Software supplied by M HART LTD herewith regardless of whether other software is referred to or described herein. The terms also apply to any M HART LTD updates, supplements, Internet-based services, and support services for the Software, unless other terms accompany those items on delivery. If so, those terms apply.\r\n'
      'License Grant\r\n'
      'M HART LTD hereby grants you a personal, non-transferable, non-exclusive licence to use the HartSuite software on your devices in accordance with the terms of this EULA agreement.\r\n'
      'You are permitted to load the HartSuite software (for example a PC, laptop, mobile or tablet) under your control. You are responsible for ensuring your device meets the minimum requirements of the HartSuite software.\r\n'
      'You are not permitted to:\r\n'
      'Edit, alter, modify, adapt, translate or otherwise change the whole or any part of the Software nor permit the whole or any part of the Software to be combined with or become incorporated in any other software, nor decompile, disassemble or reverse engineer the Software or attempt to do any such things\r\n'
      'Reproduce, copy, distribute, resell or otherwise use the Software for any commercial purpose\r\n'
      'Allow any third party to use the Software on behalf of or for the benefit of any third party\r\n'
      'Use the Software in any way which breaches any applicable local, national or international law\r\n'
      'use the Software for any purpose that M HART LTD considers is a breach of this EULA agreement\r\n'
      'Intellectual Property and Ownership\r\n'
      'M HART LTD shall at all times retain ownership of the Software as originally downloaded by you and all subsequent downloads of the Software by you. The Software (and the copyright, and other intellectual property rights of whatever nature in the Software, including any modifications made thereto) are and shall remain the property of M HART LTD.\r\n'
      'M HART LTD reserves the right to grant licences to use the Software to third parties.\r\n'
      'Termination\r\n'
      'This EULA agreement is effective from the date you first use the Software and shall continue until terminated. You may terminate it at any time upon written notice to M HART LTD.\r\n'
      'It will also terminate immediately if you fail to comply with any term of this EULA agreement. Upon such termination, the licenses granted by this EULA agreement will immediately terminate and you agree to stop all access and use of the Software. The provisions that by their nature continue and survive will survive any termination of this EULA agreement.\r\n'
      'Governing Law\r\n'
      'This EULA agreement, and any dispute arising out of or in connection with this EULA agreement, shall be governed by and construed in accordance with the laws of the United Kingdom.\r\n';

  static String privacyPolicy = 'Privacy Policy of HartSuite\r\n'
      'When you use our services, you\'re trusting us with your information. We understand this is a big responsibility and work hard to protect your information and put you in control.\r\n'
      'This Privacy Policy is meant to help you understand what information we collect, why we collect it, and how you can update, manage, export, and delete your information.\r\n'
      'If European Union or United Kingdom data protection law applies to the processing of your information, you can review the European requirements section below to learn more about your rights and HartSuite\'s compliance with these laws.\r\n'
      'We provide a range of services that help organisations innovate in new ways.\r\n'
      'You can use our services in a variety of ways to manage your privacy. For example, you can sign up for a HartSuite Account using an existing authentication provider e.g. Microsoft, Google or Apple. We only collect the required data from these providers which includes is your email address, this is used to identify you as a user within HartSuite.\r\n'
      'You can optionally choose to complete the rest of your user information in the app, this includes: your full name, your address, your phone number, your job title, your manager and your profile image.\r\n'
      'If you have any questions about this Privacy Policy, you can contact us at hello@hart-ltd.com.\r\n'
      'We want you to understand the types of information we collect as you use our services\r\n'
      'When you are signed into your HartSuite account we collect information that we store alongside your HartSuite account in HartSuite. Any information that identifies you specifically is treated as personal information.\r\n'
      'If you are not signed into HartSuite we don\'t collect any information about you or the devices you are using.\r\n'
      'Things you create or provide to us\r\n'
      'When you create a HartSuite account, you provide us with some personal information required to setup your account, this includes your email address.\r\n'
      'We also collect the content you create, upload, or receive from others when using our services. This includes things like the form you complete, the attachments you upload and comments you make.\r\n'
      'Information we collect as you use our services\r\n'
      'We collect information about the device you use to connect to our services and the information of the software used to run our services. This includes the device type, operating system, browser version, and application version number. We also collect information about the interactions you have with our applications to enable crash reporting and analytics.\r\n'
      'We collect this information whenever you connect to our servers or applications, such as via an Android device or website. We also collect some information about your experience with the application which includes logging, analytics and crash reporting.\r\n'
      'We collect information about your activity when using our services, including whenever you create, update, or delete a piece of data on a form, action, reading, or other data structure. We also store your information against any comment or attachment added to the suite for auditing purposes.\r\n'
      'Your location information\r\n'
      'When using our services we will sometimes collect your location information. This can be used for a range of applications from automatic filtering based on geographic location, to navigation instructions. This information may be passed to third parties if required to perform any of the above tasks, such as when using a GPS signal to pass on to a mapping provider for navigation and directions.\r\n'
      'The types of location data and the storage of this data will vary by usage, but this location history data is not passed on to third parties and will only be kept for as long as it is required to complete the task at hand. This is usually at most 24 hours during the navigation phase, and less f than one hour for the filtering of information as this is processed on an as needed basis.\r\n'
      'Measuring performance\r\n'
      'Your data is used to help us measure our applications performance and is anonymised as much as reasonably practical to still allow us to find trends with issues that may occur across certain demographics, such as users under a certain geographic area, operating system, or hardware configuration.\r\n'
      'Communicating with you\r\n'
      'We do not use the data you provide us as a direct means of communication, however, should you sign up to notifications or email alerts to be sent from our application then you will receive communications that directly relate to those actions. This will include an action becoming overdue, a form needing completion, or another action within the application for you to attend. We will not use this information for direct marketing communications.\r\n'
      'Managing and updating your information\r\n'
      'When you are signed in you will have access to the \'My Profile\' section of the application where you can modify all information. Certain user information is required, including email, first and last name and the customer(s) you have access to.\r\n'
      'Deleting your information\r\n'
      'You can delete your personal information from our application by following the Delete Account workflow in app. Some information that we store, such as the audit information stored against your actions in the system, will remain for compliance reasons as covered by your employer and any regulatory bodies. Information that falls outside of this remit can be removed by following the above routes.\r\n'
      'When we share your information\r\n'
      'With your consent we will share your information with third parties. This may include other customers that you have a working relationship with, or third-party providers as required. Any changes to the third parties or the data we share will be communicated to allow you to decide if you wish to allow the new methods of sharing.\r\n'
      'We will share some information with domain administrators as required. These administrators will either work directly for M Hart Ltd. Or for the company for which you work and access the app as an employee thereof.\r\n'
      'We may also share your information with law enforcement agencies when legally compelled to do so.\r\n'
      'We may share non identifiable information with third parties such as publishers, advertisers, and developers, such as for aggregating data to report on such as user numbers, KPI metrics from within certain sections of the applications, and to show trends about general use.\r\n'
      'Internal security\r\n'
      'Our products are all built with security in mind using at least the minimum recommended best practices, which will include encryption both in transit and at rest, role based access control, and authorisation to access the application.\r\n'
      'Retaining your information\r\n'
      'All data is retained in line with GDPR, and as such have varying time periods for which data is stored. Your personal data that you provide to us is only stored for as long as you allow us to have this information, and the snapshots of personal information that are held against your actions within the application are stored for a time that is defined by any regulatory agencies that may dictate the length of time said data must be kept.\r\n'
      'Any data gathered for analytic purposes is anonymised as it is sent from your device so that it cannot be personally linked to you, while keeping details about the environment you connected from, such as hardware type, operating system, and geographic location.\r\n'
      'Some data will be retained beyond the life of your account with us when required for compliance with any laws or regulations.\r\n'
      'Any requests for data deletion must be proven to come from the person whose details are to be deleted to prevent malicious deletion of data. As such there may be a delay from when you request for the data to be deleted and the time that all of the data is removed from our systems. In these cases, we will keep you informed in the progress of the request, and aim to delete data as soon as possible, which may also result in your data being deleted in stages.\r\n'
      'Data transfers\r\n'
      'Your data will be held in servers that are in a region close to your physical location and will be processed in that same geographical location. Where data is required to be transferred outside of the location covered by the local data protection laws you will be informed in accordance with the data regulations of the territory for which you are located, as well as any which the receiving territory may be covered by.\r\n'
      'How to exercise your rights and contact us\r\n'
      'If European (EU) or United Kingdom (UK) data protection law applies to the processing of your information, we provide the controls described in this policy so you can exercise your rights to request access to, update, remove, and restrict the processing of your information. You also have the right to object to the processing of your information to another service.\r\n'
      'Data controller\r\n'
      'The data controller for HartSuite is Mark Hart, M Hart Ltd, Wallace House, Falcon Court, Stockton on Tees, TS18 3TX.\r\n'
      'Legal bases of processing\r\n'
      'We process your data for the purposes described in this policy based on the below legal grounds.\r\n'
      '* We process your data in order to provide a service you\'ve asked for under a contract.\r\n'
      '* We process your data in order to provide a service that your employer has asked for on your behalf under a contract.\r\n'
      '* We process your data for our legitimate interests and those of third parties (where applicable) while applying appropriate safeguards that protect your privacy.\r\n'
      '* We process your data when necessary to protect the vital interests of you or another person.\r\n'
      '* We process your data when we have a legal obligation to do so.\r\n'
      '* We ask for your consent to process your data for specific purposes, and you have the right to withdraw your consent at any time.\r\n'
      'How you use HartSuite, and the data you provide us will impact the amount and type of data we store. Depending on the scale and type of the data provided the way we process this data will differ, but you will always be protected by the policy as described in this document.\r\n'
      'When this policy applies\r\n'
      'This privacy policy applies when using HartSuite and any related services. This policy does not apply to any services with separate privacy policies that do not specifically incorporate this policy.\r\n'
      'This privacy policy does not apply to:\r\n'
      '* The information practices of other companies or organisations that advertise our services.\r\n'
      '* Services offered by other companies or individuals that link to HartSuite.\r\n'
      'Changes to this policy\r\n'
      'This privacy policy will be updated from time to time. We will never reduce your rights under this policy without your explicit consent. We will always refer to the date that the policy changes were published. When changes are significant we will provide a prominent notice.\r\n';

  static String acceptableUse = 'Acceptable Use Policy (AUP) of HartSuite\r\n'
      'Use of the Services is subject to this Acceptable Use Policy.\r\n'
      'Capitalised terms have the meaning stated in the applicable agreement between Customer and HartSuite.\r\n'
      'Customer agrees not to, and not to allow third parties to use the Services:\r\n'
      'to violate, or encourage the violation of, the legal rights of others;\r\n'
      'to engage in, promote or encourage illegal activity, including child sexual exploitation, child abuse, or terrorism or violence that can cause death, serious harm, or injury to individuals or groups of individuals;\r\n'
      'for any unlawful, invasive, infringing, defamatory or fraudulent purpose including Non-consensual Explicit Imagery (NCEI), violating intellectual property rights of others, phishing, or creating a pyramid scheme;\r\n'
      'to distribute viruses, worms, Trojan horses, corrupted files, hoaxes, or other items of a destructive or deceptive nature;\r\n'
      'to gain unauthorized access to, disrupt, or impair the use of the Services, or the equipment used to provide the Services, by customers, authorized resellers, or other authorized users;\r\n'
      'to disable, interfere with or circumvent any aspect of the Services, Software, or the equipment used to provide the Services;\r\n'
      'to generate, distribute, publish or facilitate unsolicited mass email, promotions, advertisements, or other solicitations (“spam”); or\r\n'
      'to use the Services, or any interfaces provided with the Services, to access any other HartSuite product or service in a manner that violates the terms of service of such other HartSuite product or service.\r\n';
}
