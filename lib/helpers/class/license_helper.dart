import 'package:hart_suite/helpers/class/date_help.dart';
import 'package:hart_suite/repos/license/license_repo.dart';
import 'package:shared_preferences/shared_preferences.dart';

class LicenseHelper {
  static const String licensed = 'hasLicense';
  static String getLicensableMonth() {
    String month;

    month = DateHelp.formatYearMonth(DateTime.now());

    return month;
  }

  static Future<bool> checkLicense({required String userId, required String customer}) async {
    bool hasLicense;

    hasLicense = false;

    await SharedPreferences.getInstance().then((prefs) async {
      String monthId;
      LicenseRepo licenseRepo;

      hasLicense = prefs.getBool(licensed) ?? false;

      if (!hasLicense) {
        monthId = getLicensableMonth();

        licenseRepo = LicenseRepo(customer: customer);
        hasLicense = await licenseRepo.userHasLicense(userId: userId, monthId: monthId);

        prefs.setBool(licensed, hasLicense);
      }
    });

    return hasLicense;
  }
}
