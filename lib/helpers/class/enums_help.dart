class EnumsHelp {
  //STATUSES
  static const String statusOpen = 'open';
  static const String statusPastDue = 'past_due';
  static const String statusVerification = 'verification';
  static const String statusDone = 'done';
  static const String statusNew = 'new';

  //DISCIPLINES
  static const String disciplineAll = 'all';
  static const String disciplineOperations = '9MuNb67aLeJNwNeLSaFF';
  static const String disciplineQuality = 'A8NRGWhQzD5wun68PKxQ';
  static const String disciplineInformationTechnology = 'Ac8s0MRP21BERsQXSDhr';
  static const String disciplineFinance = 'D3UBLGEFkH9GcB7nuvDc';
  static const String disciplineHumanResources = 'LvOrMawaNmvGQrMEWq8p';
  static const String disciplineMaintenance = 'NLTXrOmRJGIhvN8Ctszj';
  static const String disciplineEngineering = 'RJ7O53j5i1EbmnyeKT3v';
  static const String disciplineSafety = 'SC4zTNoQ3n8NAkLVw12T';
  static const String disciplineTraining = 'eEtFsXblsvtZXqJGhqco';
}
