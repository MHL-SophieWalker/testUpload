import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:hart_suite/helpers/firebase/firestore_helper.dart';
import 'package:hart_suite/models/data/data_server_type.dart';
import 'package:hart_suite/models/general/auditable.dart';
import 'package:hart_suite/models/profile/person_snapshot.dart';

class DataServerTypeRepo {
  final String basePath = 'customers';
  final String collectionName = 'dataServerTypes';
  late String customer;
  late String path;
  late PersonSnapshot? personSnapshot;

  DataServerTypeRepo({bool useMocks = false, this.personSnapshot, required this.customer}) {
    path = '$basePath/$customer/$collectionName';
    FirestoreHelper.useMocks = useMocks;
  }

  setPersonSnapshot(PersonSnapshot personSnapshot) {
    this.personSnapshot = personSnapshot;
  }

  Future<List<DataServerType>> get() async {
    List<DataServerType> dataServerTypes = List.empty(growable: true);

    await FirestoreHelper.instance?.getDataCollection(path: collectionName).then((value) {
      if (value.docs.isNotEmpty) {
        for (var d in value.docs) {
          dataServerTypes.add(fromDocumentSnapshot(d));
        }

        dataServerTypes.sort((a, b) => a.name.compareTo(b.name));
      }
    });

    return dataServerTypes;
  }

  Future<DataServerType?> getById({required String id}) async {
    DataServerType? dataServerType;

    dataServerType = null;

    await FirestoreHelper.instance?.getDocumentById(path: collectionName, id: id).then((value) {
      if (value.exists) {
        dataServerType = fromDocumentSnapshot(value);
      }
    });

    return dataServerType;
  }

  Future<void> update({required DataServerType dataServerType}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    dataServerType.updated = audit;

    await FirestoreHelper.instance?.updateDocument(path: collectionName, data: dataServerType.toMap(), id: dataServerType.documentId!);
  }

  Future<void> add({required DataServerType dataServerType}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    dataServerType.created = audit;

    await FirestoreHelper.instance?.addDocument(path: collectionName, data: dataServerType.toMap()).then((value) => dataServerType.documentId = value.id);
  }

  Stream getStream() {
    return FirestoreHelper.instance?.streamDataCollection(path: collectionName) ?? const Stream.empty();
  }

  static DataServerType fromDocumentSnapshot(DocumentSnapshot<Object?> value) {
    DataServerType dst;
    Map<String, dynamic> data;

    data = value.data() as Map<String, dynamic>;

    dst = DataServerType(
      documentId: value.id,
      name: data.containsKey('name') ? data['name'] : '',
      created: data.containsKey('created') ? Auditable.fromMap(data['created']) : null,
      updated: data.containsKey('updated') ? Auditable.fromMap(data['updated']) : null,
      deleted: data.containsKey('deleted') ? Auditable.fromMap(data['deleted']) : null,
    );

    return dst;
  }
}
