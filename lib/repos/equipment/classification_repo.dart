import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:hart_suite/helpers/firebase/firestore_helper.dart';
import 'package:hart_suite/models/equipment/classification.dart';
import 'package:hart_suite/models/general/auditable.dart';
import 'package:hart_suite/models/profile/person_snapshot.dart';

class ClassificationRepo {
  final String collectionName = 'classifications';
  final String basePath = 'customers';
  late String customer;
  late String path;
  late PersonSnapshot? personSnapshot;

  ClassificationRepo({bool useMocks = false, this.personSnapshot, required this.customer}) {
    path = '$basePath/$customer/$collectionName';
    FirestoreHelper.useMocks = useMocks;
  }

  setPersonSnapshot(PersonSnapshot personSnapshot) {
    this.personSnapshot = personSnapshot;
  }

  Future<List<Classification>> get() async {
    List<Classification> classifications = List.empty(growable: true);

    await FirestoreHelper.instance?.getDataCollection(path: path).then((value) {
      if (value.docs.isNotEmpty) {
        for (var d in value.docs) {
          classifications.add(fromDocumentSnapshot(d));
        }
      }
    });

    classifications.sort((a, b) => a.name.compareTo(b.name));

    return classifications;
  }

  Future<Classification?> getById({required String id}) async {
    Classification? classification;

    classification = null;

    await FirestoreHelper.instance?.getDocumentById(path: path, id: id).then((value) {
      if (value.exists) {
        classification = fromDocumentSnapshot(value);
      }
    });

    return classification;
  }

  Future<void> update({required Classification classification}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    classification.updated = audit;

    await FirestoreHelper.instance?.updateDocument(path: path, data: classification.toMap(), id: classification.documentId!);
  }

  Future<void> add({required Classification classification}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    classification.created = audit;

    await FirestoreHelper.instance?.addDocument(path: path, data: classification.toMap()).then((value) => classification.documentId = value.id);
  }

  Stream getStream() {
    return FirestoreHelper.instance?.streamDataCollection(path: path) ?? const Stream.empty();
  }

  static Classification fromDocumentSnapshot(DocumentSnapshot<Object?> value) {
    Classification classification;
    Map<String, dynamic> data;

    data = value.data() as Map<String, dynamic>;

    classification = Classification(
        documentId: value.id,
        name: data.containsKey('name') ? data['name'] : '',
        created: data.containsKey('created') ? Auditable.fromMap(data['created']) : null,
        updated: data.containsKey('updated') ? Auditable.fromMap(data['updated']) : null,
        deleted: data.containsKey('deleted') ? Auditable.fromMap(data['deleted']) : null);

    return classification;
  }
}
