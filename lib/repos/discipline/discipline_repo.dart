import 'package:hart_suite/helpers/firebase/firestore_helper.dart';
import 'package:hart_suite/models/discipline/discipline.dart';
import 'package:hart_suite/models/profile/person_snapshot.dart';

class DisciplineRepo {
  //this only exists on the root and so doesn't need a customer
  final String path = 'disciplines';
  late PersonSnapshot? personSnapshot;
  final List<Discipline> disciplines = List.empty(growable: true);

  DisciplineRepo({bool useMocks = false, this.personSnapshot}) {
    FirestoreHelper.useMocks = useMocks;

    //IDs match what they were in Firebase so if they go back use the same IDs
    disciplines.addAll([
      Discipline(documentId: '9MuNb67aLeJNwNeLSaFF', name: 'Operations', iconCode: 'build'),
      Discipline(documentId: 'NLTXrOmRJGIhvN8Ctszj', name: 'Maintenance', iconCode: 'construction'),
      Discipline(documentId: 'SC4zTNoQ3n8NAkLVw12T', name: 'Safety', iconCode: 'health_and_safety'),
    ]);
  }

  setPersonSnapshot(PersonSnapshot personSnapshot) {
    this.personSnapshot = personSnapshot;
  }

  Future<List<Discipline>> get() async {
    return disciplines;
  }

  Future<Discipline?> getById({required String id}) async {
    Discipline? disc;

    disc = disciplines.firstWhere((element) => element.documentId == id);

    return disc;
  }
}
