import 'package:hart_suite/models/profile/person.dart';
import 'package:hart_suite/models/profile/person_snapshot.dart';
import 'package:hart_suite/models/profile/profile.dart';
import 'package:hart_suite/repos/profile/person_repo.dart';
import 'package:hart_suite/repos/profile/team_repo.dart';

class ProfileRepo {
  late PersonRepo personRepo;
  late TeamRepo teamRepo;
  late bool useMocks;
  late PersonSnapshot? personSnapshot;
  late String customer;

  ProfileRepo({this.useMocks = false, this.personSnapshot, required this.customer});

  setPersonSnapshot(PersonSnapshot personSnapshot) {
    this.personSnapshot = personSnapshot;
  }

  Future<List<Profile>> get({bool populate = false}) async {
    List<Profile> profiles = List.empty(growable: true);

    personRepo = PersonRepo(useMocks: useMocks, personSnapshot: personSnapshot);
    teamRepo = TeamRepo(useMocks: useMocks, personSnapshot: personSnapshot, customer: customer);

    await personRepo.get(populate: populate).then((value) => profiles.addAll(value));
    await teamRepo.get(populate: populate).then((value) => profiles.addAll(value));

    return profiles;
  }

  Future<Profile> getById({required String id, bool populate = false}) async {
    Profile? profile;

    personRepo = PersonRepo(useMocks: useMocks, personSnapshot: personSnapshot);
    teamRepo = TeamRepo(useMocks: useMocks, personSnapshot: personSnapshot, customer: customer);

    profile = null;

    await personRepo.getById(id: id, populate: populate).then((value) => profile = value);

    if (profile == null) {
      await teamRepo.getById(id: id, populate: populate).then((value) => profile = value);
    }

    return profile ?? //we should never get to the point that we can't find any profile by id, but just in case
        Person(
            image: 'Profile Not Found',
            firstName: '',
            lastName: '',
            initials: '',
            contact: null,
            address: null,
            position: null,
            disciplines: {},
            disabled: null,
            created: null,
            updated: null,
            deleted: null);
  }
}
