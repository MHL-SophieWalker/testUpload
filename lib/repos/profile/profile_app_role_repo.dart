import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:hart_suite/helpers/firebase/firestore_helper.dart';
import 'package:hart_suite/models/app/app.dart';
import 'package:hart_suite/models/general/auditable.dart';
import 'package:hart_suite/models/profile/person_snapshot.dart';
import 'package:hart_suite/models/profile/profile.dart';
import 'package:hart_suite/models/profile/profile_app_role.dart';
import 'package:hart_suite/models/profile/role.dart';
import 'package:hart_suite/repos/app/app_repo.dart';
import 'package:hart_suite/repos/profile/profile_repo.dart';
import 'package:hart_suite/repos/profile/role_repo.dart';

class ProfileAppRoleRepo {
  final String basePath = 'customers';
  final String collectionName = 'profileAppRoles';
  late String customer;
  late String path;
  late PersonSnapshot? personSnapshot;

  ProfileAppRoleRepo({bool useMocks = false, this.personSnapshot, required this.customer}) {
    path = '$basePath/$customer/$collectionName';
    FirestoreHelper.useMocks = useMocks;
  }

  setPersonSnapshot(PersonSnapshot personSnapshot) {
    this.personSnapshot = personSnapshot;
  }

  Future<List<ProfileAppRole>> get({bool populate = false}) async {
    List<ProfileAppRole> profileAppRoles = List.empty(growable: true);

    FirestoreHelper.instance?.getDataCollection(path: path).then((value) {
      if (value.docs.isNotEmpty) {
        for (var d in value.docs) {
          profileAppRoles.add(fromDocumentSnapshot(d));
        }

        profileAppRoles.sort((a, b) => a.app.keys.first.compareTo(b.app.keys.first));
      }
    });

    if (populate && profileAppRoles.isNotEmpty) {
      populateItems(par: profileAppRoles).then((value) => profileAppRoles = value);
    }

    return profileAppRoles;
  }

  Future<ProfileAppRole?> getById({required String id, bool populate = false}) async {
    ProfileAppRole? profileAppRole;

    profileAppRole = null;

    await FirestoreHelper.instance?.getDocumentById(path: path, id: id).then((value) {
      if (value.exists) {
        profileAppRole = fromDocumentSnapshot(value);
      }
    });

    if (populate && profileAppRole != null) {
      await populateItem(pappr: profileAppRole!).then((value) => profileAppRole = value);
    }

    return profileAppRole;
  }

  Future<void> update({required ProfileAppRole profileAppRole}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    profileAppRole.updated = audit;

    await FirestoreHelper.instance?.updateDocument(path: path, data: profileAppRole.toMap(), id: profileAppRole.documentId!);
  }

  Future<void> add({required ProfileAppRole profileAppRole}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    profileAppRole.created = audit;

    await FirestoreHelper.instance?.addDocument(path: path, data: profileAppRole.toMap()).then((value) => profileAppRole.documentId = value.id);
  }

  Future<void> updateDocumentWithMerge({required ProfileAppRole profileAppRole}) async {
    Auditable audit = Auditable(person: personSnapshot, dateStamp: DateTime.now());

    profileAppRole.updated = audit;

    await FirestoreHelper.instance?.updateDocumentWithMerge(path: path, data: profileAppRole.toMap(), id: profileAppRole.documentId!);
  }

  Stream getStream() {
    return FirestoreHelper.instance?.streamDataCollection(path: path) ?? const Stream.empty();
  }

  Future<List<ProfileAppRole>> populateItems({required List<ProfileAppRole> par}) async {
    for (var pappr in par) {
      populateItem(pappr: pappr).then((value) => pappr = value);
    }

    return par;
  }

  Future<ProfileAppRole> populateItem({required ProfileAppRole pappr}) async {
    ProfileRepo profileRepo;
    AppRepo appRepo;
    RoleRepo roleRepo;

    profileRepo = ProfileRepo(personSnapshot: personSnapshot, customer: customer);
    appRepo = AppRepo(personSnapshot: personSnapshot, customer: customer);
    roleRepo = RoleRepo(personSnapshot: personSnapshot, customer: customer);

    for (var key in pappr.profile.keys) {
      await profileRepo.getById(id: key).then((value) => pappr.profile[key] = value);
    }
    for (var key in pappr.app.keys) {
      await appRepo.getById(id: key).then((value) => pappr.app[key] = value);
    }
    for (var key in pappr.role.keys) {
      await roleRepo.getById(id: key).then((value) => pappr.role[key] = value);
    }

    return pappr;
  }

  static ProfileAppRole fromDocumentSnapshot(DocumentSnapshot<Object?> value) {
    ProfileAppRole profileAppRole;
    Map<String, Profile?> profileMap;
    Map<String, App?> appMap;
    Map<String, Role?> roleMap;
    Map<String, dynamic> data;

    profileMap = {};
    appMap = {};
    roleMap = {};

    data = value.data() as Map<String, dynamic>;

    if (data.containsKey('app') && data['app'] != null) {
      for (var key in data['app'].keys) {
        appMap[key] = App.fromMap(data['app'][key]);
      }
    }

    if (data.containsKey('profile') && data['profile'] != null) {
      for (var key in data['profile'].keys) {
        profileMap[key] = Profile.fromMap(data['profile'][key]);
      }
    }

    if (data.containsKey('role') && data['role'] != null) {
      for (var key in data['role'].keys) {
        roleMap[key] = Role.fromMap(data['role'][key]);
      }
    }

    profileAppRole = ProfileAppRole(
      documentId: value.id,
      app: appMap,
      profile: profileMap,
      role: roleMap,
      created: data.containsKey('created') ? Auditable.fromMap(data['created']) : null,
      updated: data.containsKey('updated') ? Auditable.fromMap(data['updated']) : null,
      deleted: data.containsKey('deleted') ? Auditable.fromMap(data['deleted']) : null,
    );

    return profileAppRole;
  }
}
