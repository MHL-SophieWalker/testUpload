import 'package:flutter/material.dart';
import 'package:hart_suite/error_handler.dart';
import 'package:hart_suite/helpers/ui/icon_help.dart';
import 'package:hart_suite/models/profile/person.dart';

class ProfileCard {
  late Widget profileCard;
  static const int showJobTitle = 1;
  static const int showEmail = 2;
  static const int showPhone = 3;
  double size = 38;
  Person person;

  ProfileCard({required this.person, required List<int> showItems, bool isSelected = false, bool expanded = true}) {
    profileCard = Padding(
      //fixes the left side alignment when an icon is used in place of an image as the icon has built in whitespace arount it to make it square
      padding: EdgeInsets.all(getImagePath(person: person).isEmpty ? 4 : 8.0),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisSize: MainAxisSize.min,
        children: [
          ClipRRect(
            clipBehavior: Clip.antiAlias,
            borderRadius: BorderRadius.circular(1000),
            child: isSelected
                ? IconHelp.getIconFromString(name: 'check_circle', semanticLabel: 'Selected', size: size, color: Colors.green)
                : getImagePath(person: person).isNotEmpty
                    ? Image.network(
                        width: 30,
                        height: 30,
                        isAntiAlias: true,
                        filterQuality: FilterQuality.medium,
                        getImagePath(person: person),
                        errorBuilder: (context, error, stackTrace) {
                          ErrorHandler.logError(exception: error, stack: stackTrace);
                          return IconHelp.getIconFromString(name: 'account_circle_outlined', semanticLabel: 'Profile Icon', size: size);
                        },
                        fit: BoxFit.cover,
                      )
                    : Padding(
                        padding: const EdgeInsets.fromLTRB(0, 6, 0, 6),
                        child: IconHelp.getIconFromString(name: 'account_circle_outlined', semanticLabel: 'Profile Icon', size: size),
                      ),
          ),
          SizedBox(
              //fixes the right side alignment when an icon is used in place of an image as the icon has built in whitespace arount it to make it square
              width: expanded
                  ? getImagePath(person: person).isEmpty
                      ? 4
                      : 8
                  : 0),
          expanded
              ? Flexible(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    mainAxisAlignment: MainAxisAlignment.center,
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        person.fullName,
                        overflow: TextOverflow.ellipsis,
                      ),
                      if (showItems.contains(showJobTitle)) const SizedBox(width: 8),
                      if (showItems.contains(showJobTitle))
                        Flexible(
                          child: Text(
                            person.position?.jobTitle == null || person.position!.jobTitle.isEmpty ? 'No job title found' : person.position!.jobTitle,
                            overflow: TextOverflow.ellipsis,
                          ),
                        ),
                      if (showItems.contains(showEmail)) const SizedBox(width: 8),
                      if (showItems.contains(showEmail))
                        Flexible(
                          fit: FlexFit.loose,
                          child: Text(
                            person.contact?.email == null || person.contact!.email!.isEmpty ? 'No email found' : person.contact!.email!,
                            overflow: TextOverflow.ellipsis,
                          ),
                        ),
                      if (showItems.contains(showPhone)) const SizedBox(width: 8),
                      if (showItems.contains(showPhone))
                        Flexible(
                          child: Text(
                            person.contact?.mobile == null || person.contact!.mobile!.isEmpty
                                ? (person.contact?.telephone == null || person.contact!.telephone!.isEmpty
                                    ? 'No phone number found'
                                    : person.contact!.telephone!)
                                : person.contact!.mobile!,
                            overflow: TextOverflow.ellipsis,
                          ),
                        ),
                    ],
                  ),
                )
              : Container(),
        ],
      ),
    );
  }

  getImagePath({required Person person}) {
    String url = '';

    url = person.remoteImageUrl ?? '';

    url;

    return url.replaceFirst('image', 'image_54x41');
  }
}
