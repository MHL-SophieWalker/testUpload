import 'package:flutter/material.dart';

class NumberCircleColoured extends StatefulWidget {
  final String message;
  final Color color;
  final int number;
  final Function? onTap;

  const NumberCircleColoured({
    super.key,
    required this.message,
    required this.color,
    required this.number,
    this.onTap,
  });

  @override
  State<NumberCircleColoured> createState() => _NumberCircleColouredState();
}

class _NumberCircleColouredState extends State<NumberCircleColoured> {
  @override
  Widget build(BuildContext context) {
    return Tooltip(
      message: widget.message,
      child: GestureDetector(
        onTap: widget.onTap == null ? null : () => widget.onTap!(),
        child: Container(
          width: 48,
          height: 48,
          decoration: BoxDecoration(
            color: widget.color,
            shape: BoxShape.circle,
          ),
          child: Center(
            child: Text(
              widget.number.toString(),
              style: const TextStyle(
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
        ),
      ),
    );
  }
}
