import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:hart_suite/enums/comment_type.dart';
import 'package:hart_suite/helpers/class/date_help.dart';
import 'package:hart_suite/models/comment/comment.dart';
import 'package:hart_suite/style/style_base.dart';
import 'package:hart_suite/widgets/misc/text_tag.dart';
import 'package:hart_suite/widgets/profile/profile_image_disc.dart';

class CommentLogCard extends StatefulWidget {
  const CommentLogCard({
    super.key,
    required this.comment,
  });

  final Comment comment;

  @override
  State<CommentLogCard> createState() => _CommentLogCardState();
}

class _CommentLogCardState extends State<CommentLogCard> {
  late Reference? ref;
  late Future<String> downloadUrl;
  late String url = '';
  late Color tagColor, tagTextColor;

  @override
  void initState() {
    super.initState();

    if (widget.comment.created?.person?.imagePath != null && widget.comment.created?.person?.imagePath != '') {
      ref = FirebaseStorage.instance.ref().child(widget.comment.created!.person!.imagePath!);
      downloadUrl = ref!.getDownloadURL();
    } else {
      ref = null;
      downloadUrl = Future.value('');
    }

    switch (widget.comment.type) {
      case CommentType.general:
        tagColor = StyleBase.blue;
        tagTextColor = Colors.white;
        break;
      case CommentType.assignee:
        tagColor = StyleBase.green;
        tagTextColor = Colors.white;
        break;
      case CommentType.verifier:
        tagColor = StyleBase.orange;
        tagTextColor = Colors.white;
        break;
      case CommentType.admin:
        tagColor = StyleBase.warningRed;
        tagTextColor = Colors.white;
        break;
      case CommentType.attachment:
        tagColor = StyleBase.yellow;
        tagTextColor = Colors.white;
        break;
    }
  }

  @override
  Widget build(BuildContext context) {
    return buildWidget();
  }

  Widget buildWidget() {
    Widget widg;

    downloadUrl.then((value) {
      if (mounted) {
        setState(() {
          url = value;
        });
      }
    });

    widg = Card(
      color: Theme.of(context).cardColor,
      child: Padding(
        padding: const EdgeInsets.all(8),
        child: Row(
          mainAxisSize: MainAxisSize.min,
          children: [
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ProfileImageDisc(
                fullName: widget.comment.created?.person?.fullName ?? '',
                downloadUrl: url,
              ),
            ),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  Flexible(child: Text(widget.comment.created?.person?.fullName ?? '', overflow: TextOverflow.ellipsis)),
                  Flexible(
                    child: Text(DateHelp.formatDateTimeNoSeconds(widget.comment.created!.dateStamp!),
                        style: const TextStyle(fontSize: 10), overflow: TextOverflow.ellipsis),
                  ),
                  Flexible(child: Text(widget.comment.content)),
                ],
              ),
            ),
            Align(
              alignment: Alignment.centerRight,
              child: Padding(
                padding: const EdgeInsets.only(right: 4),
                child: TextTag(
                  color: tagColor,
                  textColor: tagTextColor,
                  text: widget.comment.type.toString().substring(widget.comment.type.toString().indexOf('.') + 1),
                ),
              ),
            )
          ],
        ),
      ),
    );

    return widg;
  }
}
