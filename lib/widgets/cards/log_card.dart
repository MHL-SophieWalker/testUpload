import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:hart_suite/helpers/class/date_help.dart';
import 'package:hart_suite/models/general/auditable.dart';
import 'package:hart_suite/widgets/profile/profile_image_disc.dart';

class LogCard extends StatefulWidget {
  const LogCard({
    super.key,
    required this.log,
  });

  final Auditable log;

  @override
  State<LogCard> createState() => _LogCardState();
}

class _LogCardState extends State<LogCard> {
  late Reference? ref;
  late Future<String> downloadUrl;
  late String url = '';

  @override
  void initState() {
    super.initState();

    if (widget.log.person?.imagePath != null && widget.log.person?.imagePath != '') {
      ref = FirebaseStorage.instance.ref().child(widget.log.person!.imagePath!);
      downloadUrl = ref!.getDownloadURL();
    } else {
      ref = null;
      downloadUrl = Future.value('');
    }
  }

  @override
  Widget build(BuildContext context) {
    return buildWidget();
  }

  Widget buildWidget() {
    Widget widg;

    downloadUrl.then((value) {
      if (mounted) {
        setState(() {
          url = value;
        });
      }
    });

    widg = Card(
      color: Theme.of(context).cardColor,
      child: Padding(
        padding: const EdgeInsets.all(8),
        child: Row(
          mainAxisSize: MainAxisSize.min,
          children: [
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ProfileImageDisc(
                fullName: widget.log.person?.fullName ?? '',
                downloadUrl: url,
              ),
            ),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  Flexible(child: Text(widget.log.person?.fullName ?? '', overflow: TextOverflow.ellipsis)),
                  Flexible(
                    child: Text(DateHelp.formatDateTimeNoSeconds(widget.log.dateStamp!), style: const TextStyle(fontSize: 10), overflow: TextOverflow.ellipsis),
                  ),
                  Flexible(child: Text(widget.log.note ?? '', overflow: TextOverflow.ellipsis)),
                ],
              ),
            ),
          ],
        ),
      ),
    );

    return widg;
  }
}
