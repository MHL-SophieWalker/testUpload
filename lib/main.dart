import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:hart_suite/error_handler.dart';
import 'package:hart_suite/firebase_options.dart';
import 'package:hart_suite/helpers/route/route_help.dart';
import 'package:hart_suite/style/style_base.dart';
import 'package:hart_suite/views/auth/auth_gate.dart';
import 'package:flutter_web_plugins/url_strategy.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  usePathUrlStrategy();

  ErrorHandler.setupHandler();

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'HartSuite®',
      theme: StyleBase.themeData,
      initialRoute: AuthGate.route,
      routes: routeHelp,
    );
  }
}
