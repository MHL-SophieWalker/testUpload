# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Make it so
'on':
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: '3.24.0'
      JAVA_VERSION: '17'
      AAB_PATH: build/app/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/upload-keystore.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: store_credentials.json
    steps:
      - name: 🧑‍💻 Checkout the code
        uses: actions/checkout@v4
        
      # Setup Flutter in the VM
      - name: 🧑‍💻 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

       # Setup Java in the VM
      - name: 🧑‍💻 Setup Java to compile the Android project
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      # Decode Android Keystore env variable
      - name: 🧑‍💻 Decode Android keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      # Decode Android key properties env variable
      - name: 🧑‍💻 Decode Android key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      # Decode Android release Service Account
      - name: 🧑‍💻 Decode Android Service Account
        run: echo "${{ secrets.ANDROID_RELEASE_SERVICE_ACCOUNT }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}

      # Run flutter commands
      - name: 📦 Run flutter pub get
        run: flutter pub get

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🕵️ Analyze to check for bad Dart/Flutter practices
        run: flutter analyze --no-fatal-infos

      - name: 🧪 Run all app tests
        run: flutter test

      - name: 🌎 Build Web
        run: flutter build web

      - name: 🤖 Build Android
        run: |
          flutter build appbundle --release

      # Do the needful - Web
      - name: 🌎 Do the needful - Web
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_HARTSUITE_655A5 }}'
          channelId: live
          projectId: hartsuite-655a5

      # Do the needful - Android
      # Upload generated aab to project artifacts
      - name: 🤖 Do the needful - Android
        uses: actions/upload-artifact@master
        with:
          name: aab-stores
          path: ${{ env.AAB_PATH }}

      # Deploy bundle to Google Play internal testing
      - name: 🤖 Do the needful - Hope you will be OK
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_PATH }}
          packageName: com.mhl.hart_suite
          releaseFiles: ${{ env.AAB_PATH }}
          track: production
